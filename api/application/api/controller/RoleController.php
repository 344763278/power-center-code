<?php
// +----------------------------------------------------------------------
// | 角色
// +----------------------------------------------------------------------
// | Author: wk <weika520@qq.com | http://www.wcphp.com> 2017/7/22 11:48
// +----------------------------------------------------------------------

namespace app\api\controller;


use app\common\controller\AuthBase;
use app\common\model\Role as RoleModel;
use think\Db;
use think\Exception;
use think\Request;

class RoleController extends AuthBase
{
    public  $roleModel;
    public function __construct(Request $request)
    {
        parent::__construct($request); // TODO: Change the autogenerated stub
        $this->roleModel = new RoleModel();
    }

    /**
     * 角色列表
     * Author: wk <weika520@qq.com>
     */
    public function lists()
    {
        $map = [
            'search_word/s'=>'search_word',
            'page/d'=>['page',1],
            'page_size/d'=>'page_size',
            'Fsystem_id'=>'system_id',
        ];
        $data = $this->getParams($map);
        $this->roleModel->alias('r')->join('__SYSTEM__ s','r.Fsystem_id = s.Fsystem_id','left')->field(['s.Fname'=>'system_name']);
        $searchData = $this->roleModel->searchQuery($data);

        apiSuccess('success',$searchData);
    }

    /**
     * 添加角色
     * Author: wk <weika520@qq.com>
     */
    public function add()
    {
        $map = [
            'Fname/s'=>'name',
            'Fsystem_id'=>'system_id',
            'Fdesc/s'=>'desc',
            'authority_id'=>'authority_id'
        ];
        $data = $this->getParams($map,'Role.add');
        //事物
        try{
            $this->roleModel->startTrans();
            $result = $this->roleModel->create($data,true);
            if(!isset($result->Frole_id)){
                throw new Exception('插入角色失败,请重试');
            }
            $insertData = [];
            if(!empty($data['authority_id']) && is_array($data['authority_id'])){
                foreach($data['authority_id'] as $item){
                    $row = [];
                    $row['Frole_id'] = $result->Frole_id;
                    $row['Fauthority_id'] =$item;
                    $insertData[] = $row;
                }
                Db::name('role_authority')->insertAll($insertData);
            }
            $this->roleModel->commit();
            apiSuccess('添加角色成功',['role_id'=>$result->Frole_id]);
        }catch(Exception $e){
            $this->roleModel->rollback();

            apiFail('10009',$e->getMessage());
        }
    }

    /**
     * 修改角色
     * Author: wk <weika520@qq.com>
     */
    public function edit()
    {
        $map = [
            'Frole_id'=>'role_id',
            'Fname/s'=>'name',
            'Fsystem_id'=>'system_id',
            'Fdesc/s'=>'desc',
            'Fstatus/d'=>['status',1],
            'authority_id'=>'authority_id'
        ];
        $data = $this->getParams($map,'Role.edit');
        //事物
        try{
            $this->roleModel->startTrans();
            $result = $this->roleModel->isUpdate(true)->allowField(true)->save($data);
            //print_r($result);exit;
            //print_r($this->positionModel->getLastSql());exit;
            if($result<1){
                throw new Exception('修改角色失败,请重试');
            }
            Db::name('role_authority')->where(['Frole_id'=>$data['Frole_id']])->delete();
            $insertData = [];
            if(!empty($data['authority_id']) && is_array($data['authority_id'])){

                foreach($data['authority_id'] as $item){
                    $row = [];
                    $row['Frole_id'] = $data['Frole_id'];
                    $row['Fauthority_id'] = $item;
                    $insertData[] = $row;
                }
                //print_r($insertData);exit;
                Db::name('role_authority')->insertAll($insertData);
            }
            $this->roleModel->commit();
            apiSuccess('修改角色成功');
        }catch(Exception $e){
            $this->roleModel->rollback();

            apiFail('10009',$e->getMessage());
        }
    }


    /**
     * 角色详情
     * Author: wk <weika520@qq.com>
     */
    public function info()
    {
        $map = [
            'Frole_id'=>'role_id',
        ];
        $data = $this->getParams($map,'Role.info');
        $result = $this->roleModel->setFieldMap(['role_id','system_id','name','desc','status'])->find($data);
        //角色权限信息
        $authorityLists = Db::name('role_authority')->where($data)->column('Fauthority_id');
        if(!empty($result)){
            $result = $result->toArray();
            $result['authority_id'] = $authorityLists;
            apiSuccess('获取角色信息成功',$result);
        }else{
            apiFail('10009','获取角色信息不存在');
        }
    }
    /**
     * 删除角色信息
     * Author: wk <weika520@qq.com>
     */
    public function del()
    {
        $map = [
            'ids'=>'role_id',
        ];
        $data = $this->getParams($map,'role.del');
        $result = $this->roleModel->where(['Frole_id'=>['in',$data['ids']]])->delete();
        if($result >0){
            apiSuccess('删除角色成功');
        }
        apiFail('10009','删除角色失败');
    }





}