<?php
// +----------------------------------------------------------------------
// | 职位
// +----------------------------------------------------------------------
// | Author: wk <weika520@qq.com | http://www.wcphp.com> 2017/7/21 16:13
// +----------------------------------------------------------------------

namespace app\api\controller;

use app\common\controller\AuthBase;
use app\common\model\Position as PositionModel;
use think\Db;
use think\Exception;
use think\Request;

class PositionController extends AuthBase
{
    public  $positionModel;
    public function __construct(Request $request)
    {
        parent::__construct($request); // TODO: Change the autogenerated stub
        $this->positionModel = new PositionModel();
    }

    /**
     * 职位列表
     * Author: wk <weika520@qq.com>
     */
    public function lists()
    {
        $map = [
            'search_word/s'=>'search_word',
            'page/d'=>['page',1],
            'page_size/d'=>'page_size',
            'department_id'=>'department_id'
        ];
        $data = $this->getParams($map);
        $this->positionModel->alias('p')->join('__DEPARTMENT__ d','p.Fdepartment_id = d.Fdepartment_id')->field(['d.Fname'=>'department_name']);
        $searchData = $this->positionModel->searchQuery($data);
        apiSuccess('success',$searchData);
    }


    /**
     * 添加职位
     * Author: wk <weika520@qq.com>
     */
    public function add()
    {
        $map = [
            'Fname/s'=>'name',
            'Fdepartment_id'=>'department_id',
            'Fdesc/s'=>'desc',
            'system_role'=>'system_role'
        ];
        $data = $this->getParams($map,'Position.add');
       //事物
        try{
            $this->positionModel->startTrans();
            $result = $this->positionModel->create($data,true);
           // print_r($result) ;exit;
            if(!isset($result->Fposition_id)){
                throw new Exception('插入职位失败,请重试');
            }
            $insertData = [];
            if(!empty($data['system_role']) && is_array($data['system_role'])){
                foreach($data['system_role'] as $item){
                    $row = [];
                    $row['Fposition_id'] = $result->Fposition_id;
                    $row['Fsystem_id'] = $item['system_id'];
                    $row['Frole_id'] = $item['role_id'];
                    $insertData[] = $row;
                }
                Db::name('position_role')->insertAll($insertData);
            }
            $this->positionModel->commit();
            apiSuccess('添加职位成功',['position_id'=>$result->Fposition_id]);
        }catch(Exception $e){
            $this->positionModel->rollback();

            apiFail('10009',$e->getMessage());
        }


    }
    /**
     * 查询单个职位信息
     * Author: wk <weika520@qq.com>
     */
    public function info()
    {
        $map = [
            'Fposition_id'=>'position_id',
        ];
        $data = $this->getParams($map,'Position.info');
        $result = $this->positionModel->setFieldMap(['position_id','department_id','name','desc'])->find($data);
        //print_r($result);exit;
        //职位角色信息
        $systemRole = Db::name('position_role')->where($data)->field(['Fsystem_id'=>'system_id','Frole_id'=>'role_id'])->select();
        if(!empty($result)){
            $result = $result->toArray();
            $result['system_role'] = $systemRole;
            apiSuccess('获取职位信息成功',$result);
        }else{
            apiFail('10009','获取职位信息不存在');
        }
    }

    /**
     * 修改职位信息
     * Author: wk <weika520@qq.com>
     */
    public function edit()
    {
        $map = [
            'Fposition_id'=>'position_id',
            'Fdepartment_id/d'=>'department_id',
            'Fname/s'=>'name',
            'Fdesc/s'=>'desc',
            'system_role'=>'system_role'
        ];
        $data = $this->getParams($map,'Position.edit');
//事物
        try{
            $this->positionModel->startTrans();
            $result = $this->positionModel->isUpdate(true)->allowField(true)->save($data);
            //print_r($this->positionModel->getLastSql());exit;
            if($result<1){
                throw new Exception('修改职位失败,请重试');
            }
            //删除职位 角色 系统映射
            Db::name('position_role')->where(['Fposition_id'=>$data['Fposition_id']])->delete();
            $insertData = [];
            if(!empty($data['system_role']) && is_array($data['system_role'])){
                foreach($data['system_role'] as $item){
                    $row = [];
                    $row['Fposition_id'] = $data['Fposition_id'];
                    $row['Fsystem_id'] = $item['system_id'];
                    $row['Frole_id'] = $item['role_id'];
                    $insertData[] = $row;
                }
                Db::name('position_role')->insertAll($insertData);
            }
            $this->positionModel->commit();
            apiSuccess('修改职位成功');
        }catch(Exception $e){
            $this->positionModel->rollback();
            apiFail('10009',$e->getMessage());
        }
    }

    /**
     * 删除职位信息
     * Author: wk <weika520@qq.com>
     */
    public function del()
    {
        $map = [
            'ids'=>'position_id',
        ];
        $data = $this->getParams($map,'Position.del');
        $result = $this->positionModel->where(['Fposition_id'=>['in',$data['ids']]])->delete();
        if($result >0){
            apiSuccess('删除职位信息成功');
        }
        apiFail('10009','删除职位消息失败');
    }
    /**
     * 职位(选择)
     * Author: wk <weika520@qq.com>
     */
    public function positionSelect()
    {
        $map = [
            'Fdepartment_id'=>'department_id',
        ];
        $data = $this->getParams($map);
        $positionList = $this->positionModel->setFieldMap(['name','position_id','department_id'])->where($data)->select();
        $lists = [];
        if(!empty($positionList)){
            foreach($positionList as $item){
                $lists[] = $item->toArray();
            }
        }
        apiSuccess('获取职位成功',['lists'=>$lists]);
    }




}