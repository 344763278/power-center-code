<?php
// +----------------------------------------------------------------------
// | 
// +----------------------------------------------------------------------
// | Author: wk <weika520@qq.com | http://www.wcphp.com> 2017/7/19 19:03
// +----------------------------------------------------------------------

namespace app\api\controller;

use app\common\controller\AuthBase;
use app\common\service\BossUserService;
use app\common\service\PositionService;
use app\common\service\SystemService;
use app\common\service\UserService;
use app\common\model\User as UserModel;
use think\Db;
use think\Request;

class UserController extends AuthBase
{
    public  $userModel;
    public function __construct(Request $request)
    {
        parent::__construct($request); // TODO: Change the autogenerated stub
        $this->userModel = new UserModel();
    }
    /**
     * 用户列表
     * Author: wk <weika520@qq.com>
     */
    public function lists()
    {

        $map = [
            'search_word/s'=>'search_word',
            'page/d'=>['page',1],
            'page_size/d'=>'page_size',
           // 'Fsystem_id'=>'system_id',
        ];
        $data = $this->getParams($map);
        //print_r($data);exit;
        $user = clone($this->userModel);
        $userObj = $user ->field(['d.Fname'=>'department_name','p.Fname'=>'position_name'])
                        ->alias('u')
                        ->join('__DEPARTMENT__ d','u.Fdepartment_id = d.Fdepartment_id','left')
                        ->join('__POSITION__ p','u.Fposition_id = p.Fposition_id','left');
        $searchData = $this->userModel->setQuery($userObj)->searchQuery($data);
        apiSuccess('success',$searchData);
    }

    /**
     * 登录用户信息
     * Author: wk <weika520@qq.com>
     */
    public function loginInfo()
    {
        $userService = new UserService();
        //用户基本信息
        $userInfo = self::$userInfo['user_info'] = $userService->getInfo(self::$userInfo['user_id']);
        $positionService = new PositionService();
        $menuTree = $positionService->getMenuTree(self::$userInfo['user_id'],self::$systemId);
        //除当前系统的子系统
        $systemService = new SystemService();
        $systemList = $systemService->getUserSystem(self::$userInfo['user_info']['position_id'],self::$systemId);

        apiSuccess('请求成功',['user_info'=>$userInfo,'menu'=>$menuTree,'system_list'=>$systemList]);
    }

    /**
     * 用户信息
     * Author: wk <weika520@qq.com>
     */
    public function info()
    {
        $map = [
            'Fuser_id'=>'user_id',
        ];
        $data = $this->getParams($map,'User.info');
        $userService = new UserService();
        //用户基本信息
        $userInfo = $userService->getInfo($data['Fuser_id']);
        apiSuccess('获取用户信息成功',$userInfo);
    }

    /**
     * 删除用户信息
     * Author: wk <weika520@qq.com>
     */
    public function del()
    {
        $map = [
            'ids'=>'user_id',
        ];
        $data = $this->getParams($map,'User.del');
        $result = $this->userModel->destroy($data['ids']);
        if($result > 0){
            apiSuccess('删除用户信息成功');
        }
        apiFail('10009','删除用户信息失败');
    }

    /**
     * 添加用户（占时不用）
     * Author: wk <weika520@qq.com>
     */
    public function add()
    {
        $map = [
            'Fusername/s'=>'username',
            'Freal_name/s'=>'real_name',
            'Fcity_id/d'=>'city_id',
            'Fpassword/s'=>'password',
            'Fuser_desc/s'=>'user_desc',
            'Fphone/s'=>'phone',
            'Femail/s'=>'email',
            'Fdepartment_id'=>'department_id',
            'Fposition_id'=>'position_id',
        ];
        $data = $this->getParams($map,'User.add');
        //校验用户是否已存在
        if(!empty($this->userModel->where(['Fusername'=>$data['Fusername']])->find())){
            apiFail('10009','用户名已存在');
        }
        $result = $this->userModel->create($data);
        if(isset($result->Fuser_id)){
            apiSuccess('添加用户成功');
        }
        apiFail('10009','添加用户失败');
    }

    /**
     * 编辑用户信息
     * @param mixed
     * Author: wk <weika520@qq.com>
     */
    public function edit()
    {
        $map = [
            'Fuser_id'=>'user_id',
            'Freal_name/s'=>'real_name',
            'Fcity_id'=>'city_id',
            'Fuser_desc/s'=>'user_desc',
            'Fphone/s'=>'phone',
            'Femail/s'=>'email',
            'Fdepartment_id'=>'department_id',
            'Fposition_id'=>'position_id',
            'Fis_lock'=>'is_lock',
        ];
        $data = $this->getParams($map,'User.edit');
        $result = $this->userModel->isUpdate(true)->save($data);
        if($result >0){
            apiSuccess('修改用户信息成功');
        }else{
            apiFail(90001,'修改用户信息失败');
        }
    }

    /**
     * 修改登录用户密码
     * @param mixed
     * Author: wk <weika520@qq.com>
     */
    public function editPassword ()
    {
        $map = [
            'new_password'=>'new_password',
            'old_password'=>'old_password',
        ];
        $data = $this->getParams($map,'User.editPassword');
        $row = $this->userModel->where(['Fuser_id'=>self::$userInfo['user_id']])->find();
        if(empty($row)){
            apiFail('10009','用户不存在');
        }
        if($row->Fpassword != sha5($data['old_password'],$row->Fsalt)){
            apiFail('10009','老密码错误');
        }
        $row->Fsalt = random_str();
        $row->Freset_password = 0;
        $row->Fpassword = sha5($data['new_password'],$row->Fsalt);
        $num = $row->save();
        if($num >0){
            apiSuccess('修改密码成功');
        }else{
            apiFail('10009','修改密码错误');
        }
    }

    /**
     * 重置并随机生成密码
     * Author: wk <weika520@qq.com>
     */
    public function resetPassword ()
    {
        $map = [
            'user_id'=>'user_id',
        ];
        $data = $this->getParams($map,'User.resetPassword');
        $row = $this->userModel->where(['Fuser_id'=>$data['user_id']])->find();
        if(empty($row)){
            apiFail('10009','用户不存在');
        }
        $row->Fsalt = random_str();
        $row->Freset_password = 1;
        $password = random_str();
        $row->Fpassword = sha5($password,$row->Fsalt);
        $num = $row->save();
        if($num >0){
            apiSuccess('重置密码成功',['password'=>$password]);
        }else{
            apiFail('10009','重置密码错误');
        }
    }

    /**
     * 同步boss系统用户 默认登录密码为huishoubao
     * Author: wk <weika520@qq.com>
     */
    public function syncBoss()
    {
        $bossUser = new BossUserService();
        $result = $bossUser->syncBoss();
        if($result['code'] !== true){
            apiFail('10009',$result['msg']);
        }else{
            apiSuccess($result['msg'].',本次同步'.$result['data'].'位用户');
        }
    }



}