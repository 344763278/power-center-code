<?php
// +----------------------------------------------------------------------
// | 权限规则
// +----------------------------------------------------------------------
// | Author: wk <weika520@qq.com | http://www.wcphp.com> 2017/7/22 11:58
// +----------------------------------------------------------------------

namespace app\api\controller;
use app\common\controller\AuthBase;
use app\common\model\Authority as AuthorityModel;
use think\Db;
use think\Request;

class AuthorityController extends AuthBase
{
    public  $authorityModel;
    public function __construct(Request $request)
    {
        parent::__construct($request); // TODO: Change the autogenerated stub
        $this->authorityModel = new AuthorityModel();
    }

    /**
     * 权限列表
     * Author: wk <weika520@qq.com>
     */
    public function lists()
    {
        $map = [
            'search_word/s'=>'search_word',
            'page/d'=>['page',1],
            'page_size/d'=>'page_size',
            'system_id'=>'system_id',
            'status'=>'status',
        ];
        $data = $this->getParams($map);
        $this->authorityModel->alias('a')->join('__SYSTEM__ s','a.Fsystem_id = s.Fsystem_id','left')->join('__AUTHORITY__ au','a.Fpid = au.Fauthority_id','left')->field(['s.Fname'=>'system_name','au.Fname'=>'p_name']);
        $searchData = $this->authorityModel->searchQuery($data);
        apiSuccess('success',$searchData);
    }

    /**
     * 添加权限
     * Author: wk <weika520@qq.com>
     */
    public function add()
    {
        $map = [
            'Fsystem_id/s'=>'system_id',
            'Fname/s'=>'name',
            'Ftype/s'=>['type',1],
            'Fpid/s'=>['pid',0],
            'Fstyle/s'=>'style',
            'Faccess_flags/s'=>'access_flags',
            'Fshow_flags/s'=>'show_flags',
        ];
        $data = $this->getParams($map,'Authority.add');
        $result = $this->authorityModel->create($data);
        if(isset($result->Fauthority_id)){
            apiSuccess('添加权限成功');
        }
        apiFail('10009','添加权限失败');

    }
    /**
     * 查询单个权限信息
     * Author: wk <weika520@qq.com>
     */
    public function info()
    {
        $map = [
            'Fauthority_id/d'=>'authority_id',
        ];
        $data = $this->getParams($map,'Authority.info');
        $result = $this->authorityModel->setFieldMap(['authority_id','name','type','pid','style','system_id','access_flags','show_flags','status'])->find($data);
        if(!empty($result)){
            apiSuccess('获取权限信息成功',$result->toArray());
        }else{
            apiFail('10009','获取权限信息不存在');
        }
    }
    /**
     * 修改权限信息
     * Author: wk <weika520@qq.com>
     */
    public function edit()
    {
        $map = [
            'Fauthority_id'=>'authority_id',
            'Fsystem_id/s'=>'system_id',
            'Fname/s'=>'name',
            'Ftype/s'=>['type',1],
            'Fpid/s'=>['pid',0],
            'Fstyle/s'=>'style',
            'Faccess_flags/s'=>'access_flags',
            'Fshow_flags/s'=>'show_flags',
            'Fstatus/d'=>['status',1],
        ];
        $data = $this->getParams($map,'Authority.edit');
        $result = $this->authorityModel->update($data);
        apiSuccess('修改权限信息成功');
    }

    /**
     * 删除权限信息
     * Author: wk <weika520@qq.com>
     */
    public function del()
    {
        $map = [
            'ids'=>'authority_id',
        ];
        $data = $this->getParams($map,'Authority.del');
        $result = $this->authorityModel->where(['Fauthority_id'=>['in',$data['ids']]])->delete();
        if($result >0){
            apiSuccess('删除权限信息成功');
        }
        apiFail('10009','删除权限信息失败');
    }

    /**
     * 栏目(选择)
     * Author: wk <weika520@qq.com>
     */
    public function columnSelect()
    {
        $map = [
            //'Fpid'=>['column_id',0],
            'Fsystem_id'=>'system_id',
        ];
        $data = $this->getParams($map,'Authority.select');
        $data['Ftype'] = 2;//2-菜单
        $columnList = $this->authorityModel->setFieldMap(['name','pid'])->field(['Fauthority_id'=>'id'])->where($data)->select();
        //$menu = $this->_menuTree($columnList,$data['Fpid']);
        function columnList($list,$pid=0,$layer=0){
            $menu =[];
            foreach($list as $item){
                if($item['pid'] == $pid){
                    $c = $layer;
                    for($i=0;$c>$i;$c--){
                        $item['name']= '|-'.$item['name'];
                    }
                    $menu[] = $item;
                    $menu = array_merge($menu,columnList($list,$item['id'],($layer+1)));
                }
            }
            return $menu;
        }

        apiSuccess('获取权限栏目成功',['lists'=>columnList($columnList,0)]);
    }

    /**
     * 权限树
     * Author: wk <weika520@qq.com>
     */
    public function authorityTree()
    {
        $map = [
            'Fpid'=>['p_id',0],
            'Fsystem_id'=>'system_id',
        ];
        $data = $this->getParams($map,'Authority.tree');
        $authorityLists = Db::name('authority')
            ->field(['Fauthority_id'=>'id','Fname'=>'label','Fpid'=>'pid','Ftype'=>'type'])
            ->where([
                'Fsystem_id'=>$data['Fsystem_id'],
                'Fstatus'=>1,
            ])
            ->select();

        $menu = $this->_menuTree($authorityLists,$data['Fpid']);
        apiSuccess('获取权限栏目成功',$menu);
    }


    /**
     * 树形菜单生成
     * @param mixed
     * Author: wk <weika520@qq.com>
     */
    protected function _menuTree($list,$pid=0,$pidS='')
    {
        $menu =[];
        foreach($list as $item){
            if($item['pid'] == $pid){
                $item['pids'] = $pidS;
                $item['children'] = $this->_menuTree($list,$item['id'],$pidS.'#'.$item['id']);
                $menu[] = $item;
            }
        }
        return $menu;
    }





}